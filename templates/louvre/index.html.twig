{% extends 'base.html.twig' %}

{% block title %}Louvre!{% endblock %}

{% block body %}
<div class="opicity_back">
    <!-- multistep form -->
    <div id="msform" >
        {{ form_start(form) }}
        <!-- progressbar -->
        <ul id="progressbar">
            <li class="active">Date</li>
            <li>Billets</li>
            <li>Email</li>
            <li>Paiement</li>
        </ul>
        <!-- fieldsets -->
        <fieldset>
            <h2 class="fs-title">Choisir une date</h2>
            <div id="sandbox-container" class="calendrier">
                <div class="input-daterange input-group" id="datepicker">
                    {{ form_row(form.date, {'attr': {'name':'start', 'readonly':'readonly'}}) }}
                </div>
            </div>
            {{ form_row(form.demiJournee) }}
            <button type="button" name="nexte" class="nexte action-button">suivant</button>
        </fieldset>
        <fieldset>
            <h2 class="fs-title">Social Profiles</h2>
            <ul class="tags" data-prototype="{{ form_widget(form.billets.vars.prototype)|e('html_attr') }}">
                ...
            </ul>
            <button type="button" name="previous" class="previous action-button">retour</button>
            <button type="button" name="nexte" class="nexte action-button">suivant</button>
        </fieldset>
        <fieldset>
            <h2 class="fs-title">Personal Details</h2>
            {{ form_row(form.email) }}
            <button type="button" name="previous" class="previous action-button">retour</button>
            <button type="button" name="nexte" class="nexte action-button">suivant</button>
        </fieldset>
        <fieldset>
            <h2 class="fs-title">Personal Details</h2>
            <button type="button" name="previous" class="previous action-button">retour</button>
            {{ form_row(form.save) }}
        </fieldset>
        {{ form_end(form) }}
    </div>
</div>

{% endblock %}
    {% block javascripts %}

        {{ encore_entry_script_tags('app') }}

        <script>
            $('#sandbox-container').datepicker({
                format: 'yyyy-mm-dd',
                datesDisabled: {{ dates|json_encode|raw }},
                daysOfWeekDisabled: '2',
                language: "fr",
                orientation: "auto",
                startDate : new Date()
            });
        </script>
        <script>

            //jQuery time
            var current_fs, next_fs, previous_fs; //fieldsets
            var left, opacity, scale; //fieldset properties which we will animate
            var animating; //flag to prevent quick multi-click glitches

            $(".nexte").click(function(){
                if(animating) return false;
                animating = true;

                current_fs = $(this).parent();
                next_fs = $(this).parent().next();

                //activate nexte step on progressbar using the index of next_fs
                $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

                //show the nexte fieldset
                next_fs.show();
                //hide the current fieldset with style
                current_fs.animate({opacity: 0}, {
                    step: function(now, mx) {
                        //as the opacity of current_fs reduces to 0 - stored in "now"
                        //1. scale current_fs down to 80%
                        scale = 1 - (1 - now) * 0.2;
                        //2. bring next_fs from the right(50%)
                        left = (now * 50)+"%";
                        //3. increase opacity of next_fs to 1 as it moves in
                        opacity = 1 - now;
                        current_fs.css({
                            'transform': 'scale('+scale+')',
                            'position': 'absolute'
                        });
                        next_fs.css({'left': left, 'opacity': opacity});
                    },
                    duration: 800,
                    complete: function(){
                        current_fs.hide();
                        animating = false;
                    },
                    //this comes from the custom easing plugin
                    easing: 'easeInOutBack'
                });
            });

            $(".previous").click(function(){
                if(animating) return false;
                animating = true;

                current_fs = $(this).parent();
                previous_fs = $(this).parent().prev();

                //de-activate current step on progressbar
                $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

                //show the previous fieldset
                previous_fs.show();
                //hide the current fieldset with style
                current_fs.animate({opacity: 0}, {
                    step: function(now, mx) {
                        //as the opacity of current_fs reduces to 0 - stored in "now"
                        //1. scale previous_fs from 80% to 100%
                        scale = 0.8 + (1 - now) * 0.2;
                        //2. take current_fs to the right(50%) - from 0%
                        left = ((1-now) * 50)+"%";
                        //3. increase opacity of previous_fs to 1 as it moves in
                        opacity = 1 - now;
                        current_fs.css({'left': left});
                        previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});
                    },
                    duration: 800,
                    complete: function(){
                        current_fs.hide();
                        animating = false;
                    },
                    //this comes from the custom easing plugin
                    easing: 'easeInOutBack'
                });
            });

            $(".submit").click(function(){
                return false;
            })

        </script>

        <script>
            var $collectionHolder;

            // setup an "add a tag" link
            var $addTagButton = $('<button type="button" class="add_tag_link">Add a tag</button>');
            var $newLinkLi = $('<li></li>').append($addTagButton);

            jQuery(document).ready(function() {
                // Get the ul that holds the collection of tags
                $collectionHolder = $('ul.tags');

                // add the "add a tag" anchor and li to the tags ul
                $collectionHolder.append($newLinkLi);

                // count the current form inputs we have (e.g. 2), use that as the new
                // index when inserting a new item (e.g. 2)
                $collectionHolder.data('index', $collectionHolder.find(':input').length);

                $addTagButton.on('click', function(e) {
                    // add a new tag form (see next code block)
                    addTagForm($collectionHolder, $newLinkLi);
                });
            });


            function addTagForm($collectionHolder, $newLinkLi) {
                // Get the data-prototype explained earlier
                var prototype = $collectionHolder.data('prototype');

                // get the new index
                var index = $collectionHolder.data('index');

                var newForm = prototype;
                // You need this only if you didn't set 'label' => false in your tags field in TaskType
                // Replace '__name__label__' in the prototype's HTML to
                // instead be a number based on how many items we have
                // newForm = newForm.replace(/__name__label__/g, index);

                // Replace '__name__' in the prototype's HTML to
                // instead be a number based on how many items we have
                newForm = newForm.replace(/__name__/g, index);

                // increase the index with one for the next item
                $collectionHolder.data('index', index + 1);

                // Display the form in the page in an li, before the "Add a tag" link li
                var $newFormLi = $('<li></li>').append(newForm);
                $newLinkLi.before($newFormLi);
            }


            function addTagFormDeleteLink($tagFormLi) {
                var $removeFormButton = $('<button type="button">Delete this tag</button>');
                $tagFormLi.append($removeFormButton);

                $removeFormButton.on('click', function(e) {
                    // remove the li for the tag form
                    $tagFormLi.remove();
                });
            }
        </script>
    {% endblock %}